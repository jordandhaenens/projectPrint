@using ProjectPrintDos.Views.Manage
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<ul class="nav nav-pills nav-stacked">
    <li class="@ManageNavPages.IndexNavClass(ViewContext)"><a asp-action="Index">Change Profile</a></li>
    <li class="@ManageNavPages.ChangePasswordNavClass(ViewContext)"><a asp-action="ChangePassword">Password</a></li>
    @if (hasExternalLogins)
    {
        <li class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)"><a asp-action="ExternalLogins">External logins</a></li>
    }
    
    @if (User.IsInRole("Administrator"))
    {
        <li>
            <a asp-area="" asp-controller="Screen" asp-action="Index" title="View Screens">View Screens</a>
        </li>
        <li>
            <a asp-area="" asp-controller="Ink" asp-action="Index" title="View Inks">View Inks</a>
        </li>
        <li>
            <a asp-area="" asp-controller="ProductType" asp-action="Index" title="View Product Types">View Product Types</a>
        </li>
        <li>
            <a asp-area="" asp-controller="Manage" asp-action="Inventory" title="View Inventory">View Inventory</a>
        </li>
    }
    else
    {
        <li>
            <a asp-controller="Manage" asp-action="GetAddresses">Manage Addresses</a>
        </li>
    }
</ul>

